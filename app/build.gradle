apply plugin: 'com.android.application'

def cfg = rootProject.ext.android
def librarys = rootProject.ext.dependencies

android {
    compileSdkVersion cfg.compileSdkVersion
    defaultConfig {
        applicationId "com.ljhdemo.newgank"
        minSdkVersion cfg.minSdkVersion
        targetSdkVersion cfg.targetSdkVersion
        versionCode cfg.versionCode
        versionName cfg.versionName
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"

        ndk {
            //选择要添加的对应cpu型的.so库。
            abiFilters "armeabi", "armeabi-v7a", "x86", "mips"
            //abiFilters 'armeabi', 'armeabi-v7a', 'armeabi-v8a', 'x86', 'x86_64', 'mips', 'arm64-v8a'
            // 还可以添加 'x86', 'x86_64', 'mips', 'mips64'
        }
    }
    signingConfigs {
        key {
            storeFile file('android.keystore')
            storePassword '111111'
            keyAlias 'zimuli'
            keyPassword '111111'
        }
    }

    buildTypes {
        debug {
            //手机上同时装两个apk
            /*applicationIdSuffix ".debug"
            versionNameSuffix = "_dev"
            minifyEnabled false*/
            zipAlignEnabled false
            shrinkResources false
            debuggable true
            signingConfig signingConfigs.key
        }
        release {
            zipAlignEnabled true
            shrinkResources true
            debuggable false
            signingConfig signingConfigs.key
            minifyEnabled true
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }
    repositories {
        flatDir {
            dirs 'libs' //这样可以找到 libs 下的aar文件
        }
    }
    sourceSets {
        main {
            jniLibs.srcDirs = ['libs']
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
}
dependencies {
    implementation fileTree(include: ['*.jar'], dir: 'libs')
    implementation project(':lib_common')
    annotationProcessor librarys.butterknife_compiler

    implementation(name: 'module_main-debug', ext: 'aar')
    implementation(name: 'moudle_one-debug', ext: 'aar')

    if (!isModule.toBoolean()) {//动态
        //implementation project(':module_main')
    }
}
