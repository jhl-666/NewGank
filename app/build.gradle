apply plugin: 'com.android.application'

def cfg = rootProject.ext.android
def librarys = rootProject.ext.dependencies

android {
    compileSdkVersion cfg.compileSdkVersion
    defaultConfig {
        applicationId "com.ljhdemo.newgank"
        minSdkVersion cfg.minSdkVersion
        targetSdkVersion cfg.targetSdkVersion
        versionCode cfg.versionCode
        versionName cfg.versionName
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }
}
configurations.all {
    resolutionStrategy.eachDependency { DependencyResolveDetails details ->
        def requested = details.requested
        if (requested.group == 'com.android.support') {
            if (!requested.name.startsWith("multidex")) {
                //这里指定需要统一的依赖版本,这里统一为26.0.0-alpha1
                details.useVersion '26.1.0'
            }
        }
    }
}
dependencies {
    implementation fileTree(include: ['*.jar'], dir: 'libs')
    implementation librarys.appcompat_v7
    implementation librarys.constraint_layout
    implementation librarys.design
    implementation 'com.android.support.constraint:constraint-layout:1.0.2'
    testImplementation librarys.junit
    androidTestImplementation librarys.runner
    androidTestImplementation librarys.espresso_core
    compile librarys.retrofit2
    compile librarys.retrofit2_converter_gson
    compile librarys.rxandroid
    compile librarys.rxjava
    compile librarys.rxbinding
    compile librarys.retrofit2_adapter_rxjava
    compile librarys.rxpermissions
    compile librarys.okhttp3
    compile librarys.butterknife
    compile librarys.logger
    compile librarys.kprogresshud
    compile librarys.BaseRecyclerViewAdapterHelper
    compile librarys.SmartRefreshLayout
    compile librarys.photoview
    compile librarys.statusbarutil
    compile librarys.SmartRefreshHeader//没有使用特殊Header，可以不加这行
    implementation librarys.glide
    annotationProcessor librarys.butterknife_compiler
}
